import{a as m,S as b,i as L}from"./assets/vendor-mdVVRe9K.js";(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver(t=>{for(const a of t)if(a.type==="childList")for(const c of a.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&e(c)}).observe(document,{childList:!0,subtree:!0});function o(t){const a={};return t.integrity&&(a.integrity=t.integrity),t.referrerPolicy&&(a.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?a.credentials="include":t.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function e(t){if(t.ep)return;t.ep=!0;const a=o(t);fetch(t.href,a)}})();m.defaults.baseURL="https://pixabay.com";const w="46140865-1cf24fb63bb06dafc67be25f6";async function S(s,l){const o=new URLSearchParams({key:w,q:s,image_type:"photo",orientation:"horizontal",safesearch:!0,page:l,per_page:15});return await m.get(`/api/?${o}`)}const g=new b(".gallery-container a",{captionsData:"alt",captionDelay:250}),r=document.querySelector(".gallery-container");function x(s,l){const o=s.map(e=>`<li class="gallery-item">
            <a class="gallery-link" href="${e.largeImageURL}">
                <img class="gallery-image" src="${e.webformatURL}" alt="${e.tags}" width=""/>
                <div class="small-container">
                <div class="text-div"><p class="image-info-title">Likes</p><span class="image-info-value">${e.likes}</span></div>
                <div class="text-div"><p class="image-info-title">Views</p><span class="image-info-value">${e.views}</span></div>
                <div class="text-div"><p class="image-info-title">Comments</p><span class="image-info-value">${e.comments}</span></div>
                <div class="text-div"><p class="image-info-title">Downloads</p><span class="image-info-value">${e.downloads}</span></div>
                </div>
            </a>
        </li>`).join("");l==!1?r.insertAdjacentHTML("beforeend",o):r.innerHTML=o,g.refresh()}function q(){r.innerHTML="",g.refresh()}function P(s){if(s==1)return;let l=15*(s-1)+6,o=r.querySelectorAll("li");if(console.log(o.length),o.length<l)return;let e=o[l].getBoundingClientRect();console.log(e),window.scrollBy({top:e.top,left:0,behavior:"smooth"})}const u=document.querySelector("form"),p=document.querySelector(".loader-container"),n=document.querySelector(".btn-load-more"),f=document.querySelector(".end-of-gallery");let h="",i=0,y=0,d=0;window.addEventListener("load",s=>{n.style.display="none",f.style.display="none",console.log("page is fully loaded")});u.addEventListener("submit",s=>{s.preventDefault();const l=u.elements.search.value.trim();l!==""&&(h=l,i=1,v(l,i,!0))});n.addEventListener("click",s=>{s.preventDefault(),console.log(n),i+=1,v(h,i,!1)});function v(s,l,o){p.style.display="flex",n.style.display="none",o==!0&&(q(),d=0),S(s,l).then(e=>{const t=e.data.hits;y=e.data.totalHits,d+=t.length,console.log(e),d>=y?(n.style.display="none",f.style.display="flex"):(n.style.display="block",f.style.display="none"),t.length===0?L.info({title:"Info",message:"Sorry, there are no images matching your search query. Please try again!"}):(x(t,o),P(i))}).catch(e=>{console.log(e)}).finally(()=>{p.style.display="none"})}
//# sourceMappingURL=index.js.map
