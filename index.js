import{a as m,S as b,i as L}from"./assets/vendor-mdVVRe9K.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver(t=>{for(const a of t)if(a.type==="childList")for(const c of a.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&e(c)}).observe(document,{childList:!0,subtree:!0});function o(t){const a={};return t.integrity&&(a.integrity=t.integrity),t.referrerPolicy&&(a.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?a.credentials="include":t.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function e(t){if(t.ep)return;t.ep=!0;const a=o(t);fetch(t.href,a)}})();m.defaults.baseURL="https://pixabay.com";const w="46140865-1cf24fb63bb06dafc67be25f6";async function S(l,s){const o=new URLSearchParams({key:w,q:l,image_type:"photo",orientation:"horizontal",safesearch:!0,page:s,per_page:15});return await m.get(`/api/?${o}`)}const g=new b(".gallery-container a",{captionsData:"alt",captionDelay:250}),i=document.querySelector(".gallery-container");function x(l,s){const o=l.map(e=>`<li class="gallery-item">
            <a class="gallery-link" href="${e.largeImageURL}">
                <img class="gallery-image" src="${e.webformatURL}" alt="${e.tags}" width=""/>
                <div class="small-container">
                <div class="text-div"><p class="image-info-title">Likes</p><span class="image-info-value">${e.likes}</span></div>
                <div class="text-div"><p class="image-info-title">Views</p><span class="image-info-value">${e.views}</span></div>
                <div class="text-div"><p class="image-info-title">Comments</p><span class="image-info-value">${e.comments}</span></div>
                <div class="text-div"><p class="image-info-title">Downloads</p><span class="image-info-value">${e.downloads}</span></div>
                </div>
            </a>
        </li>`).join("");s==!1?i.insertAdjacentHTML("beforeend",o):i.innerHTML=o,g.refresh()}function q(){i.innerHTML="",g.refresh()}function P(l){if(l==1)return;let s=15*(l-1)+6,o=i.querySelectorAll("li");if(console.log(o.length),o.length<s)return;let e=o[s].getBoundingClientRect();console.log(e),window.scrollBy({top:e.top,left:0,behavior:"smooth"})}const p=document.querySelector("form"),d=document.querySelector(".loader-container"),n=document.querySelector(".btn-load-more"),u=document.querySelector(".end-of-gallery");let h="",r=0,y=0,f=0;window.addEventListener("load",l=>{n.style.display="none",u.style.display="none",console.log("page is fully loaded")});p.addEventListener("submit",l=>{l.preventDefault();const s=p.elements.search.value.trim();s!==""&&(h=s,r=1,v(s,r,!0))});n.addEventListener("click",l=>{l.preventDefault(),r+=1,v(h,r,!1)});async function v(l,s,o){d.style.display="flex",n.style.display="none",o==!0&&(q(),f=0);try{const e=await S(l,s);console.log(e);const t=e.data.hits;y=e.data.totalHits,f+=t.length,f>=y?(n.style.display="none",u.style.display="flex"):(n.style.display="block",u.style.display="none"),t.length===0?L.info({title:"Info",message:"Sorry, there are no images matching your search query. Please try again!"}):(x(t,o),P(r)),d.style.display="none"}catch(e){console.log(e),d.style.display="none"}}
//# sourceMappingURL=index.js.map
